<?php
session_start();

// Check if the user is logged in
if (!isset($_SESSION['user_id'])) {
    header('Location: task7.php'); // Redirect to login page if not logged in
    exit();
}

// Database configuration
$servername = "localhost"; 
$username = "yaseen";     
$password = "Yaseen@123"; 
$dbname = "own_cart";     

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Fetch data or handle application logic
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Own Cart</title>
    <style>
    body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #e0f2f1; /* Light green background */
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
        }

        .header-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 20px;
            border-color: #004d40;
            padding: 10px;
            border-radius: 10px; /* Rounded corners */
        }

        .header-container img {
            margin-right: 20px;
        }

        .header-container h1 {
            margin: 0;
            color: #ffffff; /* White text color for header */
            font-size: 24px;
            flex-grow: 1; /* Allows header title to take up space */
            text-align: center;
        }

        .search-container {
            display: flex;
            align-items: center;
            justify-content: center; /* Center search input */
            flex-grow: 1;
        }

        .search-container input {
            border: 2px solid #004d40; /* Dark green border */
            border-radius: 25px; /* More pronounced oval shape */
            padding: 10px;
            margin-right: 70px;
            font-size: 16px;
            width: 200px;
            outline: none;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.3); /* Slightly darker shadow */
        }

        .search-container input:focus {
            border-color: #00796b; /* Lighter dark green border on focus */
        }

        .search-container button {
            background: url('searchy.png') no-repeat center;
            background-size: cover;
            width: 40px;
            height: 40px;
            border: none;
            cursor: pointer;
        }

        .cart-btn {
            background: linear-gradient(to right, #004d40, #00796b); /* Dark green gradient */
            color: #ffffff;
            background-size: cover;
            width: 50px;
            height: 40px;
            border: none;
            cursor: pointer;
            margin-left: 10px;
        }

        .sort-container {
            text-align: center;
            margin-bottom: 20px;
        }

        .sort-container label {
            font-family: Arial, sans-serif;
            font-size: 18px;
            color: #004d40; /* Dark green for label */
            margin-right: 10px;
        }

        #sort {
            border-radius: 25px; /* More pronounced oval shape */
            padding: 10px;
            font-size: 16px;
            border: 2px solid #004d40; /* Dark green border */
            background: #ffffff; /* White background for the select box */
            color: #333; /* Dark text color for readability */
        }

        #sort option {
            background: #ffffff; /* White background for options */
            color: #333; /* Dark text color for options */
        }

        #mobiles-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .mobile {
            border: 1px solid #004d40; /* Dark green border */
            border-radius: 10px;
            padding: 10px;
            text-align: center;
            background: #ffffff; /* White background for mobile items */
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* Darker shadow for better visibility */
            position: relative; /* Position relative for button positioning */
        }

        .mobile img {
            max-width: 100%;
            height: 150px; /* Adjust height */
            border-radius: 10px;
        }

        .add-to-cart-btn {
            display: inline-flex;
            margin-top: 10px;
            padding: 10px 20px;
            border: none;
            background: linear-gradient(to right, #004d40, #00796b); /* Dark green gradient */
            color: white; /* White text color */
            font-size: 16px;
            border-radius: 25px; /* Rounded corners */
            cursor: pointer;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.3); /* Slightly darker shadow */
            transition: background 0.3s ease; /* Smooth transition */
        }

        .add-to-cart-btn:hover {
            background: linear-gradient(to right, #00796b, #004d40); /* Reverse gradient on hover */
        }

        .pagination {
            text-align: center;
            margin-top: 20px;
        }

        .pagination button {
            margin: 0 5px;
            padding: 10px 20px;
            border: none;
            background-image: linear-gradient(to right, #004d40, #00796b); /* Dark green gradient */
            color: white; /* White text color */
            cursor: pointer;
            border-radius: 25px; /* More pronounced oval shape */
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.3); /* Slightly darker shadow */
        }

        .pagination button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            background: #d0d0d0; /* Lighter background for disabled buttons */
            color: #666; /* Darker text color for disabled buttons */
        }

        /* Modal Styles */
        .modal {
            display: none; /* Hidden by default */
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4); /* Black background with opacity */
        }

        .modal-content {
            background-color: #ffffff;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%; /* Width of the modal */
            max-width: 800px;
            border-radius: 10px; /* Rounded corners */
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        table, th, td {
            border: 1px solid #ddd;
        }

        th, td {
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #004d40;
            color: white;
        }

        .remove-from-cart-btn {
            background: linear-gradient(to right, #e53935, #d32f2f); /* Red gradient */
            color: white; /* White text color */
            border: none;
            border-radius: 25px; /* Rounded corners */
            cursor: pointer;
            padding: 5px 10px;
        }

        .remove-from-cart-btn:hover {
            background: linear-gradient(to right, #d32f2f, #e53935); /* Reverse gradient on hover */
        }

        .modal-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }

        .modal-footer img {
            display: none; /* Hidden by default */
            width: 150px;
        }
        #proceed-to-pay-btn{
            display: inline-flex;
            margin-top: 10px;
            padding: 10px 20px;
            border: none;
            background: linear-gradient(to right, #004d40, #00796b); /* Dark green gradient */
            color: white; /* White text color */
            font-size: 16px;
            cursor: pointer;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.3); /* Slightly darker shadow */
            transition: background 0.3s ease; /* Smooth transition */

        }
        #qr-code{
            width: 100%;
            height: auto;
            border-radius: 50px;
        }
        
        .add-item-container {
            border: 1px solid #004d40; /* Dark green border */
            border-radius: 10px;
            padding: 10px;
            text-align: center;
            background: #ffffff; /* White background for add item box */
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* Darker shadow */
            position: relative; /* Position relative for button positioning */
            cursor: pointer;
        }

        .update-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: linear-gradient(to right, #004d40, #00796b); /* Dark green gradient */
            color: white;
            border: none;
            border-radius: 25px;
            padding: 5px 10px;
            cursor: pointer;
        }

        .update-btn:hover {
            background: linear-gradient(to right, #00796b, #004d40); /* Reverse gradient on hover */
        }

        /* Modal Styles */
        .modal-input {
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ddd;
        }

        .modal-button {
            padding: 10px 20px;
            border: none;
            background: linear-gradient(to right, #004d40, #00796b); /* Dark green gradient */
            color: white;
            font-size: 16px;
            border-radius: 25px; /* Rounded corners */
            cursor: pointer;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.3); /* Slightly darker shadow */
        }

        .modal-button:hover {
            background: linear-gradient(to right, #00796b, #004d40); /* Reverse gradient on hover */
        }
        .modal-input[type="file"] {
            border: none;
        }
        /* Other styles... */
        /* Style for file input inside modal */
.modal-input[type="file"] {
    border: 1px solid #004d40; /* Dark green border */
    padding: 10px;
    border-radius: 5px; /* Rounded corners */
    background: #ffffff; /* White background */
    color: #333; /* Dark text color */
    cursor: pointer; /* Pointer cursor to indicate it's clickable */
    display: block; /* Ensure it takes up full width */
    width: 25%;
}

.modal-input[type="file"]::-webkit-file-upload-button {
    background: linear-gradient(to right, #004d40, #00796b); /* Dark green gradient */
    color: white; /* White text color */
    border: none;
    border-radius: 25px; /* Rounded corners */
    padding: 10px;
    cursor: pointer;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3); /* Slightly darker shadow */
    transition: background 0.3s ease; /* Smooth transition */
}

.modal-input[type="file"]::-webkit-file-upload-button:hover {
    background: linear-gradient(to right, #00796b, #004d40); /* Reverse gradient on hover */
}

    </style>

</head>
<body>
    <div class="container">
        <div class="header-container">
            <img src="docme.png" alt="Logo" width="200px">
            <div class="search-container">
                <input type="text" id="search" placeholder="Search by name">
            </div>
            <button class="cart-btn" id="cart-btn">CART</button>
        </div>

        <div class="sort-container">
            <label for="sort">SORT BY:</label>
            <select id="sort">
                <option value="price-asc">Price: Low to High</option>
                <option value="price-desc">Price: High to Low</option>
                <option value="rating-asc">Rating: Low to High</option>
                <option value="rating-desc">Rating: High to Low</option>
            </select>
        </div>
        
        <div id="mobiles-list"></div>

        <div class="add-item-container" id="add-item-box">
            <h3>Add a New Item</h3>
            <button class="modal-button" id="add-new-item-btn">Add New Item</button>
        </div>

        <div class="pagination">
            <button id="prev-btn" disabled>Previous</button>
            <button id="next-btn">Next</button>
        </div>
    </div>

    <!-- Add Item Modal -->
    <div id="add-item-modal" class="modal">
        <div class="modal-content">
            <span class="close" id="add-item-close">&times;</span>
            <h2>Add New Mobile Item</h2>
            <input type="text" id="new-item-name" class="modal-input" placeholder="Name">
            <input type="number" id="new-item-price" class="modal-input" placeholder="Price">
            <input type="number" id="new-item-rating" class="modal-input" placeholder="Rating" step="0.1" min="0" max="5">
            <input type="file" id="new-item-photo" class="modal-input" placeholder="Photo">
            <button class="modal-button" id="save-new-item-btn">Save Item</button>
        </div>
    </div>

    <!-- Edit Item Modal -->
    <div id="edit-item-modal" class="modal">
        <div class="modal-content">
            <span class="close" id="edit-item-close">&times;</span>
            <h2>Edit Mobile Item</h2>
            <input type="text" id="edit-item-name" class="modal-input" placeholder="Name">
            <input type="number" id="edit-item-price" class="modal-input" placeholder="Price">
            <input type="number" id="edit-item-rating" class="modal-input" placeholder="Rating" step="0.1" min="0" max="5">
            <input type="file" id="edit-item-photo" class="modal-input" placeholder="Photo">
            <button class="modal-button" id="save-edit-item-btn">Save Changes</button>
        </div>
    </div>

    <div id="cart-modal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Your Cart</h2>
            <table id="cart-table">
                <thead>
                    <tr>
                        <th>Select</th>
                        <th>Item Name</th>
                        <th>Price</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Cart items will be appended here -->
                </tbody>
            </table>
            <div class="modal-footer">
                <div>Total Amount: ₹<span id="total-amount">0</span></div>
                <button id="proceed-to-pay-btn">Proceed to Pay</button>
            </div>
            <img id="qr-code" src="qr.jpg" alt="QR Code" />
        </div>
        <div class="link-container">
            <a href="task7.php" class="link">Register Here</a>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            const mobiles = [
                { name: 'vivo T2x 5G (Aurora Gold, 128 GB) (4 GB RAM)', price: 11999, rating: 4.4, photo: 'vivot2x.jpeg' },
                { name: 'Apple iPhone 14 (Starlight, 128 GB)', price: 57999, rating: 4.6, photo: 'iphone14.jpeg' },
                { name: 'Google Pixel 7 (Snow, 128 GB)  (8 GB RAM)', price: 32999, rating: 4.3, photo: 'Pixel7.jpeg' },
                            { name: 'SAMSUNG Galaxy F14 5G (B.A.E. Purple, 128 GB)  (4 GB RAM)', price: 10990, rating: 4.2, photo: 'GalaxyF14.jpeg' },
            { name: 'Apple iPhone 13 (Green, 128 GB)', price: 50990, rating: 4.6, photo: 'iPhone13.jpeg' },
            { name: 'SAMSUNG Galaxy S23 5G (Lavender, 256 GB)  (8 GB RAM)', price: 49999, rating: 4.5, photo: 'GalaxyS23s.jpeg' },
            { name: 'OPPO Reno8T 5G (Sunrise Gold, 128 GB)  (8 GB RAM)', price: 38999, rating: 4.3, photo: 'Reno8T.jpeg' },
            { name: 'POCO M4 5G (Cool Blue, 64 GB)  (4 GB RAM)', price: 12999, rating: 4.2, photo: 'POCOM4.jpeg' },
            { name: 'vivo X90 (Asteroid Black, 256 GB)  (8 GB RAM)', price: 61999, rating: 4.4, photo: 'vivoX90.jpeg' },
            { name: 'Motorola Edge 30 Fusion (Cosmic grey, 128 GB)  (8 GB RAM)', price: 42999, rating: 4.3, photo: 'Edge30.jpeg' },
            { name: 'Apple iPhone 15 (Black, 128 GB)', price: 65499, rating: 4.6, photo: 'iPhone15.jpeg' },
            { name: 'SAMSUNG Galaxy M14 4G (Arctic Blue, 64 GB)  (4 GB RAM)', price: 8565, rating: 4.0, photo: 'GalaxyM14.jpeg' },
            { name: 'Nothing Phone (2a) 5G (Black, 256 GB)  (12 GB RAM)', price: 27999, rating: 4.4, photo: 'Phone(2a).jpeg' },
            { name: 'Nothing Phone (2a) 5G (Black, 256 GB)  (8 GB RAM)', price: 25999, rating: 4.4, photo: 'Phone(2a)8.jpeg' },
            { name: 'Motorola Edge 50 Pro 5G (Moonlight Pearl, 256 GB)  (8 GB RAM)', price: 29999, rating: 4.4, photo: 'Edge50Pro.jpeg' },
            { name: 'realme Narzo 70 Pro 5G (Glass Gold, 256 GB)  (8 GB RAM)', price: 18266, rating: 4.4, photo: 'Narzo70Pro.jpeg' } // ... other mobile entries ...

            ];

            let currentPage = 1;
            const itemsPerPage = 8;
            let cart = [];
            let selectedItems = [];
            let editingIndex = null;
            let userId = <?php echo isset($_SESSION['user_id']) ? $_SESSION['user_id'] : 'null'; ?>;

            function renderMobiles(page) {
                const startIndex = (page - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage;
                const paginatedMobiles = mobiles.slice(startIndex, endIndex);

                $('#mobiles-list').empty();

                paginatedMobiles.forEach((mobile, index) => {
                    $('#mobiles-list').append(`
                        <div class="mobile">
                            <button class="update-btn" data-index="${startIndex + index}">Edit</button>
                            <img src="${mobile.photo}" alt="${mobile.name}">
                            <h3>${mobile.name}</h3>
                            <p>₹${mobile.price}</p>
                            <button class="add-to-cart-btn" data-name="${mobile.name}" data-price="${mobile.price}" data-index="${startIndex + index}">Add to Cart</button>
                        </div>
                    `);
                });

                // Pagination
                $('#prev-btn').prop('disabled', currentPage === 1);
                $('#next-btn').prop('disabled', endIndex >= mobiles.length);
            }

            function updateCartTable() {
                $('#cart-table tbody').empty();
                cart.forEach((item, index) => {
                    $('#cart-table tbody').append(`
                        <tr>
                            <td><input type="checkbox" class="select-item" data-index="${index}"></td>
                            <td>${item.name}</td>
                            <td>₹${item.price}</td>
                            <td><button class="remove-from-cart-btn" data-index="${index}">Remove</button></td>
                        </tr>
                    `);
                });
                updateTotalAmount();
            }

            function updateTotalAmount() {
                const totalAmount = selectedItems.reduce((sum, index) => sum + cart[index].price, 0);
                $('#total-amount').text(totalAmount);
            }

            function openCartModal() {
                $('#cart-modal').show();
                updateCartTable();
                $('#qr-code').hide(); // Hide QR code by default
            }

            function closeCartModal() {
                $('#cart-modal').hide();
            }

            function openAddItemModal() {
                $('#add-item-modal').show();
            }

            function closeAddItemModal() {
                $('#add-item-modal').hide();
            }

            function openEditItemModal(index) {
                const mobile = mobiles[index];
                $('#edit-item-name').val(mobile.name);
                $('#edit-item-price').val(mobile.price);
                $('#edit-item-rating').val(mobile.rating);
                $('#edit-item-photo').val('');
                editingIndex = index;
                $('#edit-item-modal').show();
            }

            function closeEditItemModal() {
                $('#edit-item-modal').hide();
            }

            $('#add-new-item-btn').on('click', function() {
                openAddItemModal();
            });

            $('#add-item-close').on('click', function() {
                closeAddItemModal();
            });

            $('#edit-item-close').on('click', function() {
                closeEditItemModal();
            });

            $('#cart-btn').on('click', function() {
                openCartModal();
            });

            $('#cart-modal .close').on('click', function() {
                closeCartModal();
            });

            $('#save-new-item-btn').on('click', function() {
                const name = $('#new-item-name').val();
                const price = parseFloat($('#new-item-price').val());
                const rating = parseFloat($('#new-item-rating').val());
                const photo = $('#new-item-photo')[0].files[0];

                if (name && !isNaN(price) && !isNaN(rating) && photo) {
                    const formData = new FormData();
                    formData.append('name', name);
                    formData.append('price', price);
                    formData.append('rating', rating);
                    formData.append('photo', photo);

                    $.ajax({
                        url: 'save_item.php',
                        type: 'POST',
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function(response) {
                            alert('Item added successfully!');
                            const newItem = JSON.parse(response);
                            mobiles.push(newItem);
                            renderMobiles(currentPage);
                            closeAddItemModal();
                        }
                    });
                } else {
                    alert('Please fill in all fields correctly.');
                }
            });

            $('#save-edit-item-btn').on('click', function() {
                const name = $('#edit-item-name').val();
                const price = parseFloat($('#edit-item-price').val());
                const rating = parseFloat($('#edit-item-rating').val());
                const photo = $('#edit-item-photo')[0].files[0];

                if (editingIndex !== null && name && !isNaN(price) && !isNaN(rating)) {
                    const updatedMobile = { name, price, rating };
                    const formData = new FormData();
                    formData.append('name', name);
                    formData.append('price', price);
                    formData.append('rating', rating);
                    if (photo) formData.append('photo', photo);

                    $.ajax({
                        url: 'update_item.php',
                        type: 'POST',
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function(response) {
                            alert('Item updated successfully!');
                            if (photo) {
                                updatedMobile.photo = JSON.parse(response).photo;
                            } else {
                                updatedMobile.photo = mobiles[editingIndex].photo;
                            }
                            mobiles[editingIndex] = updatedMobile;
                            renderMobiles(currentPage);
                            closeEditItemModal();
                        }
                    });
                } else {
                    alert('Please fill in all fields correctly.');
                }
            });

            $('#prev-btn').on('click', function() {
                if (currentPage > 1) {
                    currentPage--;
                    renderMobiles(currentPage);
                }
            });

            $('#next-btn').on('click', function() {
                if (currentPage * itemsPerPage < mobiles.length) {
                    currentPage++;
                    renderMobiles(currentPage);
                }
            });

            $('#search').on('input', function() {
                const query = $(this).val().toLowerCase();
                const filteredMobiles = mobiles.filter(mobile => mobile.name.toLowerCase().includes(query));
                $('#mobiles-list').empty();
                filteredMobiles.forEach((mobile, index) => {
                    $('#mobiles-list').append(`
                        <div class="mobile">
                            <button class="update-btn" data-index="${index}">Edit</button>
                            <img src="${mobile.photo}" alt="${mobile.name}">
                            <h3>${mobile.name}</h3>
                            <p>₹${mobile.price}</p>
                            <button class="add-to-cart-btn" data-name="${mobile.name}" data-price="${mobile.price}" data-index="${index}">Add to Cart</button>
                        </div>
                    `);
                });
            });

            $('#mobiles-list').on('click', '.add-to-cart-btn', function() {
                const index = $(this).data('index');
                const mobile = mobiles[index];
                cart.push(mobile);
                alert('Item added to cart!');
                if ($('#cart-modal').is(':visible')) {
                    updateCartTable();
                }
            });

            $('#cart-table').on('change', '.select-item', function() {
                const index = $(this).data('index');
                if ($(this).is(':checked')) {
                    selectedItems.push(index);
                } else {
                    selectedItems = selectedItems.filter(i => i !== index);
                }
                updateTotalAmount();
            });

            $('#cart-table').on('click', '.remove-from-cart-btn', function() {
                const index = $(this).data('index');
                cart.splice(index, 1);
                updateCartTable();
            });

            $('#proceed-to-pay-btn').on('click', function() {
                alert('Proceeding to payment.');
            });

            // Initial render
            renderMobiles(currentPage);
        });
    </script>
</body>
</html>